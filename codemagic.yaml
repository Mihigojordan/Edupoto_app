workflows:
  ios-build-and-upload:
  name: iOS Build & Upload to App Store
  environment:
    flutter: stable
    xcode: latest
    cocoapods: default
  vars:
    DEVELOPMENT_TEAM: $DEVELOPMENT_TEAM
    APP_STORE_CONNECT_KEY_IDENTIFIER: $APP_STORE_CONNECT_KEY_IDENTIFIER
    APP_STORE_CONNECT_ISSUER_ID: $APP_STORE_CONNECT_ISSUER_ID
    APP_STORE_CONNECT_PUBLISHER_PRIVATE_KEY: $APP_STORE_CONNECT_PUBLISHER_PRIVATE_KEY
  scripts:
    - name: Prepare Flutter
      script: |
        echo "üîπ Cleaning and fetching Flutter packages..."
        flutter clean
        flutter pub get

    - name: Fix iOS Deployment Target
      script: |
        echo "üîß Setting iOS deployment target to 15.5..."
        sed -i.bak "s/platform :ios, '.*'/platform :ios, '15.5'/" ios/Podfile || true
        plutil -replace MinimumOSVersion -string "15.5" ios/Flutter/AppFrameworkInfo.plist
        sed -i.bak "s/IPHONEOS_DEPLOYMENT_TARGET = [0-9.]\\+/IPHONEOS_DEPLOYMENT_TARGET = 15.5/g" ios/Runner.xcodeproj/project.pbxproj || true

    - name: Install CocoaPods
      script: |
        echo "üì¶ Installing CocoaPods..."
        cd ios
        pod repo update
        pod install
        cd ..

    - name: Increment Flutter Build Number
      script: |
        echo "üî¢ Incrementing Flutter build number (FLUTTER_BUILD_NUMBER)..."
        CURRENT_BUILD=$(grep "^version:" pubspec.yaml | sed 's/.*+//')
        if [ -z "$CURRENT_BUILD" ]; then
          CURRENT_BUILD=0
        fi
        NEW_BUILD=$((CURRENT_BUILD + 1))
        echo "Updating build number from $CURRENT_BUILD to $NEW_BUILD"
        sed -i.bak "s/\(^version:.*+\).*/\1$NEW_BUILD/" pubspec.yaml

    - name: Add dummy Swift file (forces SwiftSupport)
      script: |
        echo "üìù Ensuring Dummy.swift exists..."
        DUMMY_SWIFT_FILE="ios/Runner/Dummy.swift"
        if [ ! -f "$DUMMY_SWIFT_FILE" ]; then
          echo "// Dummy Swift file to force SwiftSupport inclusion" > "$DUMMY_SWIFT_FILE"
          echo "‚úÖ Dummy.swift created."
        else
          echo "‚ÑπÔ∏è Dummy.swift already exists."
        fi

    - name: Build Flutter iOS App
      script: |
        echo "üì¶ Building Flutter iOS app..."
        flutter build ios --release --no-codesign

    - name: Archive iOS App
      script: |
        echo "üì¶ Archiving iOS app with automatic signing..."
        xcodebuild -workspace ios/Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -archivePath build/ios/archive/Runner.xcarchive \
          DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
          CODE_SIGN_STYLE=Automatic \
          clean archive

    - name: Export IPA
      script: |
        echo "üì¶ Exporting IPA with Swift libraries embedded..."
        plutil -insert embedSwiftStandardLibraries -bool true ios/Runner/ExportOptions.plist || plutil -replace embedSwiftStandardLibraries -bool true ios/Runner/ExportOptions.plist
        plutil -replace stripSwiftSymbols -bool false ios/Runner/ExportOptions.plist
        xcodebuild -exportArchive \
          -archivePath build/ios/archive/Runner.xcarchive \
          -exportOptionsPlist ios/Runner/ExportOptions.plist \
          -exportPath build/ios/ipa

    - name: Verify SwiftSupport
      script: |
        echo "üîç Checking SwiftSupport inside IPA..."
        cd build/ios/ipa
        unzip -q Runner.ipa -d ipa_contents
        if [ -d "ipa_contents/SwiftSupport" ]; then
          echo "‚úÖ SwiftSupport folder found."
          echo "üìÇ SwiftSupport contents:"
          find ipa_contents/SwiftSupport -type f
        else
          echo "‚ùå SwiftSupport folder missing! Build will fail."
          exit 1
        fi
        cd ../../..

    - name: Upload IPA to App Store Connect
      script: |
        echo "üöÄ Uploading IPA to App Store Connect via API key..."
        app-store-connect publish \
          --path build/ios/ipa/Runner.ipa \
          --key-id $APP_STORE_CONNECT_KEY_IDENTIFIER \
          --issuer-id $APP_STORE_CONNECT_ISSUER_ID \
          --private-key @env:APP_STORE_CONNECT_PUBLISHER_PRIVATE_KEY \
          --verbose

  artifacts:
    - build/ios/ipa/*.ipa
    - build/ios/archive/*.xcarchive
    - build/ios/ipa/*.dSYM.zip
